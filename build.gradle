plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.palantir.docker' version '0.32.0'
	id 'com.palantir.docker-run' version '0.32.0'
	id 'com.github.node-gradle.node' version '3.0.1'
	
}

group = 'com.carless.prime'
version = '1.0'
sourceCompatibility = '11'

allprojects{
	repositories {
		mavenCentral()
	}	
}

node {
	download = true
    version = '14.18.0'
    
    // Set the work directory for unpacking node
  	workDir = file("${project.buildDir}/nodejs")

  	// Set the work directory for NPM
  	npmWorkDir = file("${project.buildDir}/npm")
}



task appNpmInstall(type: NpmTask) {
  description = "Installs all dependencies from package.json"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["install"]
}

task appNpmBuild(type: NpmTask) {
  description = "Builds production version of the webapp"
  workingDir = file("${project.projectDir}/src/main/webapp")
  args = ["run", "build"]
}

task copyWebApp(type: Copy) {
  from 'src/main/webapp/build'
  into 'build/resources/main/static/.'
}

//Docker config for building the docker image
docker {
     name "${project.name}:${project.version}"
     files "build/libs/prime-number-generator-${project.version}.jar"
}

//Docker config for running the image
dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    clean true //removes the docker container on shutdown
}

dependencies {
	
	implementation 'org.apache.commons:commons-math3:3.6.1'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

tasks.dockerRun.dependsOn 'docker'
appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp
